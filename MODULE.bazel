"Bazel dependencies"

module(
    name = "rules_flutter",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "rules_apple", version = "4.2.0")
bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "platforms", version = "0.0.5")
bazel_dep(name = "rules_go", version = "0.57.0")
bazel_dep(name = "gazelle", version = "0.35.0", repo_name = "bazel_gazelle")
bazel_dep(name = "protobuf", version = "32.1")

bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.4.1", dev_dependency = True)
bazel_dep(name = "aspect_bazel_lib", version = "1.32.1", dev_dependency = True)
bazel_dep(name = "buildifier_prebuilt", version = "6.1.2", dev_dependency = True)

flutter = use_extension("//flutter:extensions.bzl", "flutter")
flutter.toolchain(flutter_version = "3.24.0")
use_repo(
    flutter,
    "flutter_sdk",
    "flutter_toolchains",
)

register_toolchains("@flutter_toolchains//:all")

pub = use_extension("//flutter:extensions.bzl", "pub")
pub.package(
    name = "pub_fixnum",
    package = "fixnum",
    version = "1.1.1",
)
pub.package(
    name = "pub_protobuf",
    package = "protobuf",
    version = "3.1.0",
)
pub.package(
    name = "pub_protoc_plugin",
    package = "protoc_plugin",
    version = "21.1.1",
)
use_repo(
    pub,
    "pub_async",
    "pub_boolean_selector",
    "pub_characters",
    "pub_clock",
    "pub_collection",
    "pub_fake_async",
    "pub_fixnum",
    "pub_intl",
    "pub_leak_tracker",
    "pub_leak_tracker_flutter_testing",
    "pub_leak_tracker_testing",
    "pub_matcher",
    "pub_material_color_utilities",
    "pub_meta",
    "pub_path",
    "pub_protobuf",
    "pub_protoc_plugin",
    "pub_source_span",
    "pub_stack_trace",
    "pub_stream_channel",
    "pub_string_scanner",
    "pub_term_glyph",
    "pub_test_api",
    "pub_vector_math",
    "pub_vm_service",
)

# Go dependencies for gazelle plugin
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.nogo(nogo = "//:ggx_nogo")
use_repo(
    go_sdk,
    "go_toolchains",
    # This name is ugly on purpose to avoid a conflict with a user-named SDK.
    "io_bazel_rules_nogo",
)

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "in_gopkg_yaml_v3")
